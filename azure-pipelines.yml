# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

stages:
  - stage: Build
    jobs:
      - job: Maven
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              goals: '-pl com.ing.cerebro.workshop:reactive-rest-app -am package'
              #goals: 'package'
          - publish: $(System.DefaultWorkingDirectory)/reactive-rest-app/target
            artifact: vertx-rest-service
#          - publish: $(System.DefaultWorkingDirectory)/reactive-rest-app/target
#            artifact: dependency
  - stage: Containers
    jobs:
      - job: login
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'cerebro-reg'
              command: 'login'
      - job: BuildVertxREST
        dependsOn: login
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          
          - download: current
            artifact: vertx-rest-service
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Pipeline.Workspace)/vertx-rest-service'
              Contents: '**'
              TargetFolder: 'reactive-rest-app/target'
              OverWrite: true
          - bash: ls -altr
          - bash: ls -altr reactive-rest-app/target
#          - bash: cp $(Pipeline.Workspace)/vertx-rest-service/dependency reactive-rest-app/target/dependency
#          - bash: cp $(Pipeline.Workspace)/vertx-rest-service/reactive-rest-app-*.jar reactive-rest-app/target/
          - task: Docker@2
            inputs:
              containerRegistry: 'cerebro-reg'
              repository: 'cerebro'
              command: 'buildAndPush'
              Dockerfile: 'reactive-rest-app/Dockerfile'
              buildContext: '**'
      - job: HelmDeployVertxREST
        dependsOn: BuildVertxREST
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - download: current
            artifact: vertx-rest-service
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Pipeline.Workspace)/vertx-rest-service'
              Contents: '**'
              TargetFolder: 'reactive-rest-app/target'
              OverWrite: true
#          - bash: mv $(Pipeline.Workspace)/vertx-rest-service/vertx-rest-service reactive-rest-app/target/vertx-rest-service
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: 'helm template --name test-$(Build.BuildId) --output-dir target vertx-rest-service'
              #script: 'helm template --name test-${Build.BuildId} --output-dir target vertx-rest-service'
      - job: KubeDeploy
        dependsOn: HelmDeployVertxREST
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Kubernetes@1
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: 'AKS k8s-geg-dev-k8s-geg-dev-reactive-workshop-1568230047818'
              namespace: 'reactive-workshop'
              command: 'apply'
              useConfigurationFile: true
              configuration: 'reactive-rest-app/target/vertx-rest-service/templates/deployment.yaml'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Container Registry'
              dockerRegistryEndpoint: 'cerebro-reg'
          - task: Kubernetes@1
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: 'AKS k8s-geg-dev-k8s-geg-dev-reactive-workshop-1568230047818'
              namespace: 'reactive-workshop'
              command: 'apply'
              useConfigurationFile: true
              configuration: 'reactive-rest-app/target/vertx-rest-service/templates/service.yaml'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Container Registry'
              dockerRegistryEndpoint: 'cerebro-reg'