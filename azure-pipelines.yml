# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

stages:
  - stage: Build
    jobs:
      - job: Maven
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              goals: '-pl com.ing.cerebro.workshop:reactive-rest-app -pl com.ing.cerebro.workshop:delay-client -am package'
              #goals: 'package'
          - publish: $(System.DefaultWorkingDirectory)
            artifact: maven
  - stage: Containers
    dependsOn: Build
    jobs:
      - job: login
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'cerebro-reg'
              command: 'login'
      - job: ContainerBuild
        dependsOn: login
        strategy:
          maxParallel: 2
          matrix:
            Vertx_REST:
              app_folder: reactive-rest-app
              app_service_name: vertx-rest-service
            Vertx_Delay_Client:
              app_folder: delay-client
              app_service_name: vertx-delay-service
        pool:
          vmImage: 'ubuntu-latest'
#        variables:
#          app_folder: reactive-rest-app
#          app_service_name: vertx-rest-service
        steps:
        - template: templates/build-image.yml
#      - job: BuildVertxDelayClient
#        dependsOn: login
#        pool:
#          vmImage: 'ubuntu-latest'
#        variables:
#          app_folder: delay-client
#          app_service_name: vertx-delay-service
#        steps:
#        - template: templates/build-image.yml
  - stage: Helm
    dependsOn: Build
    jobs:
      - job: Template
        strategy:
          maxParallel: 2
          matrix:
            Vertx_REST:
              app_folder: reactive-rest-app
              app_service_name: vertx-rest-service
            Vertx_Delay_Client:
              app_folder: delay-client
              app_service_name: vertx-delay-service
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - template: templates/create-helm-files.yml
#      - job: VertxDelayClient
#        pool:
#          vmImage: 'ubuntu-latest'
#        variables:
#          app_folder: delay-client
#          app_service_name: vertx-delay-service
#        steps:
  #          - template: templates/create-helm-files.yml